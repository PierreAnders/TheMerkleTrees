@using MetaMask.Blazor
@using MetaMask.Blazor.Exceptions
@using Microsoft.AspNetCore.Components.Authorization
@using TheMerkleTrees.Client.Services
@inject IMetaMaskService MetaMaskService
@inject NavigationManager Navigation
@inject AuthenticationStateProvider AuthStateProvider


<div class="min-h-screen flex items-center justify-center">
    @if (!isAuthenticated)
    {
        <button class="transition ease-in-out duration-300 text-white text-xl bg-gray-700 hover:bg-gray-800 px-4 py-2 rounded" @onclick="ConnectToMetaMask">
            @buttonText
        </button>
    }
    else
    {
        <div class="text-white text-3xl">@TruncateAddress(userAddress)</div>
    }
</div>

@code{

    private bool isAuthenticated = false;
    private string userAddress;
    private string buttonText = "Connect Wallet";

    protected override async Task OnInitializedAsync()
    {
        userAddress = await MetaMaskService.GetSelectedAddress();
        
        var authState = await AuthStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity.IsAuthenticated)
        {
            isAuthenticated = true;
            userAddress = user.Identity.Name;
        }

        if (userAddress == null)
        {
            isAuthenticated = false;
        }
    }

    private async Task ConnectToMetaMask()
    {
        try
        {
            await MetaMaskService.ConnectMetaMask();
            userAddress = await MetaMaskService.GetSelectedAddress();
            await ((EthereumAuthenticationStateProvider)AuthStateProvider).MarkUserAsAuthenticated(userAddress);
            isAuthenticated = true;
            buttonText = userAddress;
        }
        catch (UserDeniedException)
        {
            isAuthenticated = false;
        }
    }

    private string TruncateAddress(string address)
    {
        if (string.IsNullOrEmpty(address) || address.Length < 10)
        {
            return address;
        }

        return $"{address.Substring(0, 4)}...{address.Substring(address.Length - 3)}";
    }
}